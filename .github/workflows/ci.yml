name: CI

on:
  pull_request:
    branches: [develop]
  push:
    branches: [develop]

env:
  CACHED_DEPENDENCY_PATHS: |
    ${{ github.workspace }}/.yarn/cache
    ${{ github.workspace }}/node_modules
  CACHED_BUILD_PACKAGE_UI_PATHS: ${{ github.workspace }}/packages/ui/dist
  BUILD_CACHE_KEY: ${{ github.sha }}
  DEFAULT_NODE_VERSION: "v20.11.1"

jobs:
  job_install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Set up Yarn
        run: |
          corepack enable
          yarn set version 4.3.1
          yarn --version

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Compute dependency cache key
        id: compute_lockfile_hash
        run: echo "hash=${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}" >> $GITHUB_OUTPUT

      - name: Check dependency cache
        uses: actions/cache@v4
        id: cache_dependencies
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: yarn install --immutable

    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}
      yarn_cache_dir_path: |
        ${{ steps.yarn-cache-dir-path.outputs.dir }}
        ${{ env.CACHED_DEPENDENCY_PATHS }}

  continuous-integration:
    needs: [job_install_dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Check dependency cache
        uses: actions/cache@v4
        with:
          path: ${{ needs.job_install_dependencies.outputs.yarn_cache_dir_path }}
          key: ${{ needs.job_install_dependencies.outputs.dependency_cache_key }}

      - name: Build packages
        run: yarn workspace @dnd-academy/ui build

      - name: Check Lint
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          yarn workspace web lint
          yarn workspace @dnd-academy/ui lint
          yarn stylelint

      - name: Check Unit Test
        run: yarn test:coverage

  job_publish_storybook_chromatic:
    needs: [job_install_dependencies]
    name: Chromatic Publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Check dependency cache
        uses: actions/cache@v4
        with:
          path: ${{ needs.job_install_dependencies.outputs.yarn_cache_dir_path }}
          key: ${{ needs.job_install_dependencies.outputs.dependency_cache_key }}

      - name: Build packages
        run: yarn workspace @dnd-academy/ui build

      - name: Publish Project to Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: apps/web
          skip: "dependabot/**"
          exitOnceUploaded: true
          onlyChanged: true
          autoAcceptChanges: true
          buildScriptName: "build:storybook"
